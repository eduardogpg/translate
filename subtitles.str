1
00:00:00,540 --> 00:00:03,560
when you're building applications, you want them to deliver a great

2
00:00:09,269 --> 00:00:10,279
a gaming session.

3
00:00:10,449 --> 00:00:16,149
Rapidly validate street address updates or make image thumbnails available instantly after

4
00:00:16,149 --> 00:00:17,660
a user uploads photos.

5
00:00:18,539 --> 00:00:22,059
To make this magic happen, your application needs back end code

6
00:00:22,059 --> 00:00:25,589
that runs in response to events like image uploads in APP,

7
00:00:25,589 --> 00:00:28,769
activity, website clicks or sensor outputs.

8
00:00:29,239 --> 00:00:34,159
But managing the infrastructure to host and execute back and code requires

9
00:00:34,159 --> 00:00:37,170
you to size, provisioned and scale a bunch of servers,

10
00:00:37,179 --> 00:00:41,799
manage operating system updates, apply security patches and then monitor all

11
00:00:41,799 --> 00:00:44,869
this infrastructure for performance and availability.

12
00:00:45,439 --> 00:00:48,500
Wouldn't it be nice if you could just focus on building great

13
00:00:48,500 --> 00:00:52,549
applications without having to spend lots of time managing servers ?

14
00:00:53,340 --> 00:00:59,170
Introducing AWS Lambda AWS Lambda is a compute service that runs your

15
00:00:59,170 --> 00:01:02,890
back end code in response to events such as object uploads to

16
00:01:02,890 --> 00:01:03,400
Amazon as three buckets.

17
00:01:03,640 --> 00:01:10,620
Updates to Amazon dynamodb tables data in Amazon kinesis streams or in

18
00:01:10,620 --> 00:01:11,599
app activity.

19
00:01:11,239 --> 00:01:15,709
Once you upload your Cody Lambda, the service handles all the

20
00:01:15,709 --> 00:01:19,370
capacity scaling, patching and administration of the infrastructure to run your

21
00:01:19,370 --> 00:01:25,200
code and provides visibility into performance by publishing real time metrics and

22
00:01:25,200 --> 00:01:26,060
logs to Amazon Cloudwatch.

23
00:01:26,540 --> 00:01:30,739
All you need to do is write the code AWS Lambda is

24
00:01:30,739 --> 00:01:34,260
very low cost and does not require any upfront investment.

25
00:01:34,640 --> 00:01:38,180
When you use AWS lambda, you're simply charged a low fee

26
00:01:38,180 --> 00:01:42,780
per request and for the time your code runs measured in increments

27
00:01:42,780 --> 00:01:44,459
of 100 milliseconds.

28
00:01:45,540 --> 00:01:48,280
Getting started with AWS Lambda is easy.

29
00:01:48,569 --> 00:01:51,909
There are no new languages, tools or frameworks to learn.

30
00:01:52,019 --> 00:01:55,510
You can use any third party library, even native ones.

31
00:01:56,140 --> 00:01:59,859
The code you run on AWS lambda is called a lambda function

32
00:00:03,560 --> 00:00:05,160
experience for your users..

33
None --> None
.

34
00:02:00,239 --> 00:02:02,569
You just upload your code is a zip file or design it

35
00:02:02,569 --> 00:02:07,650
in the integrated development environment in the AWS management console.

36
00:02:07,539 --> 00:02:12,189
Or you can select from a list of function samples pre built

37
00:02:12,189 --> 00:02:15,210
for common use cases such as image conversion, file compression and

38
00:02:15,210 --> 00:02:20,219
change notifications and built in support for the AWS.

39
00:02:20,219 --> 00:02:23,550
Sdk makes it easy to call other AWS services.

40
00:02:23,340 --> 00:02:27,449
Once your function is loaded, you select the event source to

41
00:02:27,449 --> 00:02:30,620
monitor, such as an Amazon s three bucket or Amazon dynamodb

42
00:02:30,620 --> 00:02:34,710
table, and within a few seconds, Lambda will be ready

43
00:02:34,710 --> 00:02:38,889
to trigger your function automatically when an event occurs with Lambda,

44
00:02:38,900 --> 00:02:42,830
any event can trigger your function, making it easy to build

45
00:02:42,830 --> 00:02:46,889
applications that respond quickly to new information toe.

46
00:02:46,889 --> 00:02:47,870
Learn more about AWS lambda.

47
00:02:47,879 --> 00:02:52,139
Visit our website and you can get your first Lambda function up

48
00:02:52,139 --> 00:02:55,340
and running with a few clicks in the AWS management console and

49
00:02:55,340 --> 00:02:59,590
with the AWS free tier, you can try Lambda for free

50
00:00:05,540 --> 00:00:09,269
Maybe you want your application to generate in APP purchase options during.

51
None --> None
.

