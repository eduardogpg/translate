1
00:00:00,140 --> 00:00:03,509
otra forma en la cual nosotros podremos actualizar registros es

2
00:00:03,509 --> 00:00:08,160
utilizando la función Huguet . Veamos , procedamos a importar

3
00:00:08,160 --> 00:00:13,589
la vamos a colocar From esquiva al que mis importa

4
00:00:13,599 --> 00:00:16,570
por dónde Y ahora , para este vídeo que te

5
00:00:16,570 --> 00:00:20,679
parece si actualizamos el último usuario , modificamos su nombre

6
00:00:20,690 --> 00:00:23,600
y para ello , por supuesto , nos estaremos apoyando

7
00:00:23,609 --> 00:00:27,449
de la función donde vamos a colocar . Lo siguiente

8
00:00:27,940 --> 00:00:30,920
Lo primero que voy a hacer será comentar esta parte

9
00:00:30,929 --> 00:00:33,619
para que nos quede una constancia de otra forma en

10
00:00:33,619 --> 00:00:37,670
la cual nosotros podremos actualizar registros mediante el método hunde

11
00:00:38,740 --> 00:00:42,759
bien Ahora , para este vídeo colocamos O Dei Ferrín

12
00:00:42,770 --> 00:00:47,579
es igual a nuestra función O Dei Esta función recibe

13
00:00:47,579 --> 00:00:51,159
como argumento la tabla en la cual deseamos modificar que

14
00:00:51,159 --> 00:00:54,850
en este caso sería nuestro objeto de tipo Josep La

15
00:00:54,850 --> 00:00:57,649
función Huguet Nos va a retornar la sentencia ? Si

16
00:00:57,649 --> 00:01:03,560
, cual necesaria para actualizar registros mediante el método valores

17
00:01:03,570 --> 00:01:07,219
valos , seremos capaces de indicar los nuevos valores para

18
00:01:07,219 --> 00:01:10,950
las columnas , Por ejemplo , el nombre es igual

19
00:01:10,959 --> 00:01:17,450
a nuevo cambio DE nombre dos punto cero Por ejemplo

20
00:01:18,340 --> 00:01:21,299
, y utilizando el método Wert , seremos capaces de

21
00:01:21,299 --> 00:01:26,049
condicionar sobre que registró o grupo de registros Queremos actualizar

22
00:01:26,439 --> 00:01:29,109
que en este caso , como queremos modificar el último

23
00:01:29,109 --> 00:01:32,250
usuario . La condición pudiese quedar de la siguiente manera

24
00:01:32,739 --> 00:01:34,859
Yo Ser punto Se pondrá Aydin . Y conociendo que

25
00:01:34,859 --> 00:01:40,010
poseo un máximo de doscientos registros evaluó sobre el campo

26
00:01:40,019 --> 00:01:44,349
allí que este sea igual a dos cientos . Listo

27
00:01:45,239 --> 00:01:47,370
. Vamos a imprimir en consola . Qué te parece

28
00:01:47,379 --> 00:01:49,750
la sentencia ? Si , igual Simplemente para confirmar .

29
00:01:51,939 --> 00:01:57,750
Vamos a la terminal . Claro que procedo a ejecutar

30
00:01:59,239 --> 00:02:02,450
Uy . En este caso tengo un error . Aunque

31
00:02:04,040 --> 00:02:06,849
aquí . Me hizo falta un doble signo igual .

32
00:02:07,939 --> 00:02:10,740
Ahora , si ejecuta por segunda ocasión y encontramos la

33
00:02:10,740 --> 00:02:14,610
sentencia , Sí . Cuál ? Para actualizar nuestro registro

34
00:02:14,620 --> 00:02:17,759
. Huguet Josep set . Modificamos la columna nombre y

35
00:02:17,770 --> 00:02:23,300
posteriormente nuestra condición De igual forma encontramos el número uno

36
00:02:23,310 --> 00:02:25,449
. Lo cual nos indica que un registro una fila

37
00:02:25,449 --> 00:02:30,300
fue afectada después de haberse ejecutado esta sentencia . Confirmamos

38
00:02:30,300 --> 00:02:38,550
esto . Realizamos un célebre asterisco Josep Wade allí es

39
00:02:38,550 --> 00:02:43,180
igual a dos cientos , mi ultimo usuario . Y

40
00:02:43,180 --> 00:02:46,789
podemos encontrar que este usuario ahora posee un hombre diferente

41
00:02:46,800 --> 00:02:51,150
. Nuevo cambio de nombre dos punto cero perfecto .

42
00:02:51,939 --> 00:02:53,750
Y bien , Utilizando la función Ordeig , seremos capaces

43
00:02:53,750 --> 00:02:58,439
de actualizar registros . La función recibe como argumento la

44
00:02:58,439 --> 00:03:01,740
tabla la cual deseamos modificar . Utilizando el método Valores

45
00:03:01,750 --> 00:03:05,870
, seremos capaces de indicar los nuevos valores para las

46
00:03:05,870 --> 00:03:08,310
columnas y utilizando el método Wert , seremos capaces de

47
00:03:08,310 --> 00:03:14,969
condicionar exactamente que registró o registros Queremos actualizar . Desde

48
00:03:14,969 --> 00:03:16,969
mi punto de vista , es mucho mejor utilizar la

49
00:03:16,969 --> 00:03:21,120
función Huguet que el método , ya que como podemos

50
00:03:21,129 --> 00:03:23,099
observar el código se le de una mejor manera .

51
00:03:23,110 --> 00:03:27,580
Una persona que tenga conocimientos de base de datos fácilmente

52
00:03:27,580 --> 00:03:30,669
podrá comprender qué es lo que estamos haciendo en esta

53
00:03:30,669 --> 00:03:35,050
parte . Algo quizás un poco más complicado si utilizamos

54
00:03:35,060 --> 00:03:38,539
el método , así que yo les recomiendo nuevamente .

